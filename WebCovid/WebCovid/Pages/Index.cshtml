@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script src="https://code.jquery.com/jquery-3.5.1.js" integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>
<head>
    <title>Bootstrap 101 Template</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap -->
    @*<link href="css/bootstrap.min.css" rel="stylesheet" media="screen">*@
</head>
<div class="text-center">
    <h1 class="display-4">Covid Data</h1>
    <p>Pick a state below</p>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
    <script src="https://code.jquery.com/jquery.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <div class=" dropdown" style="margin-bottom: 6cm;" id="stateSelect">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span id="selected">Choose State</span><span class="caret"></span>
        </button>
        <div class="dropdown-menu pre-scrollable" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" href="#">Choose State</a>
            <a class="dropdown-item" href="#">Alabama</a>
            <a class="dropdown-item" href="#">Alaska</a>
            <a class="dropdown-item" href="#">Arizona</a>
            <a class="dropdown-item" href="#">Arkansas</a>
            <a class="dropdown-item" href="#">California</a>
            <a class="dropdown-item" href="#">Colorado</a>
            <a class="dropdown-item" href="#">Connecticut</a>
            <a class="dropdown-item" href="#">Delaware</a>
            <a class="dropdown-item" href="#">Florida</a>
            <a class="dropdown-item" href="#">Georgia</a>
            <a class="dropdown-item" href="#">Hawaii</a>
            <a class="dropdown-item" href="#">Idaho</a>
            <a class="dropdown-item" href="#">Illinois</a>
            <a class="dropdown-item" href="#">Indiana</a>
            <a class="dropdown-item" href="#">Iowa</a>
            <a class="dropdown-item" href="#">Kansas</a>
            <a class="dropdown-item" href="#">Kentucky</a>
            <a class="dropdown-item" href="#">Louisiana</a>
            <a class="dropdown-item" href="#">Maine</a>
            <a class="dropdown-item" href="#">Maryland</a>
            <a class="dropdown-item" href="#">Massachusetts</a>
            <a class="dropdown-item" href="#">Michigan</a>
            <a class="dropdown-item" href="#">Minnesota</a>
            <a class="dropdown-item" href="#">Mississippi</a>
            <a class="dropdown-item" href="#">Missouri</a>
            <a class="dropdown-item" href="#">Montana</a>
            <a class="dropdown-item" href="#">Nebraska</a>
            <a class="dropdown-item" href="#">Nevada</a>
            <a class="dropdown-item" href="#">New Hampshire</a>
            <a class="dropdown-item" href="#">New Jersey</a>
            <a class="dropdown-item" href="#">New Mexico</a>
            <a class="dropdown-item" href="#">New York</a>
            <a class="dropdown-item" href="#">North Carolina</a>
            <a class="dropdown-item" href="#">North Dakota</a>
            <a class="dropdown-item" href="#">Ohio</a>
            <a class="dropdown-item" href="#">Oklahoma</a>
            <a class="dropdown-item" href="#">Oregon</a>
            <a class="dropdown-item" href="#">Pennsylvania</a>
            <a class="dropdown-item" href="#">Rhode Island</a>
            <a class="dropdown-item" href="#">South Carolina</a>
            <a class="dropdown-item" href="#">South Dakota</a>
            <a class="dropdown-item" href="#">Tennessee</a>
            <a class="dropdown-item" href="#">Texas</a>
            <a class="dropdown-item" href="#">Utah</a>
            <a class="dropdown-item" href="#">Vermont</a>
            <a class="dropdown-item" href="#">Virginia</a>
            <a class="dropdown-item" href="#">Washington</a>
            <a class="dropdown-item" href="#">West Virginia</a>
            <a class="dropdown-item" href="#">Wisconsin</a>
            <a class="dropdown-item" href="#">Wyoming</a>
        </div>
    </div>
    <button class="btn" type="button" id="dataButton"></button>
    <div class="hide row" id="coviddata" hidden>
        <div class=" col-3">
            <span id="stateName">State Data</span><span class="caret"></span>
            <canvas id="Chart1" width="200" height="200"></canvas>
        </div>
        <div class=" col-1">
            <canvas id="hChart1" width="200" height="200"></canvas>
        </div>
        <div class=" col-3">
            <canvas id="Chart2" width="200" height="200"></canvas>
        </div>
        <div class=" col-1">
            <canvas id="hChart2" width="200" height="200"></canvas>
        </div>
        <div class=" col-3">
            <canvas id="Chart3" width="200" height="200"></canvas>
        </div>
    </div>
        <div class="row">
            <div class="col-2 box">
                Covid facts
            </div>
            <div class="col-3">

            </div>
            <div class="col-2 box">
                Covid facts
            </div>
            <div class="col-3">

            </div>
            <div class="col-2 box">
                Covid facts
            </div>
        </div>
        <div class="col-8">

        </div>

        <!-- The core Firebase JS SDK is always required and must be listed first -->
        <script src="https://www.gstatic.com/firebasejs/8.2.5/firebase.js"></script>
        <!-- TODO: Add SDKs for Firebase products that you want to use
             https://firebase.google.com/docs/web/setup#available-libraries -->
        <!-- <script src="https://www.gstatic.com/firebasejs/8.2.5/firebase-analytics.js"></script> -->
        <script>
            // Your web app's Firebase configuration
            // For Firebase JS SDK v7.20.0 and later, measurementId is optional
            var firebaseConfig = {
                apiKey: "AIzaSyALk44aihOM5EqeiQwfD_vhIF7YhXIVwMY",
                authDomain: "swamphackscovid19data.firebaseapp.com",
                databaseURL: "https://swamphackscovid19data-default-rtdb.firebaseio.com",
                projectId: "swamphackscovid19data",
                storageBucket: "swamphackscovid19data.appspot.com",
                messagingSenderId: "573451783241",
                appId: "1:573451783241:web:96c03f6350266800a98398",
                measurementId: "G-G0JKHK3W3V"
            };
            // Initialize Firebase
            firebase.initializeApp(firebaseConfig);
            firebase.analytics();
        </script>
</div>
<script>
    var test = true;
    var stateAbr = ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL",
        "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
        "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM",
        "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN",
        "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"];

    var stateName = ["Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida",
        "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico",
        "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee",
        "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"];

    var states = {};
    
    for (var i = 0; i < 50; i++) {
        states[stateName[i]] = stateAbr[i];
    }
    
    $('.dropdown-menu a').click(function () {
        $('#selected').text($(this).text());
        if ($(this).text() == "Choose State" && document.getElementById('coviddata').getAttribute("hidden") == null) {
            document.getElementById('coviddata').setAttribute("hidden", true);
            document.getElementById('stateSelect').setAttribute("style", "margin - bottom: 6cm;");

        }
        else if ($(this).text() != "Choose State") {
            $('#stateName').text($(this).text() + " State Data");
            document.getElementById('stateSelect').removeAttribute("style");
            //Display Code below
            var state = states[$(this).text()]; //this should be interchangeable due to drop down
            console.log(state);
            var city = "Jacksonville";
            var zip = "32223";
            var database = firebase.database();
            var hospData = database.ref("hospital_data");
            var stateData = database.ref("state_data");

            //cut off dates
            //date in hosp indicates the nearest friday -- so date cutoff
            // would be the most recent friday 
            var currentTime = new Date()
            currentTime.setDate(currentTime.getDate() - (currentTime.getDay() + 1) - 7);
            console.log("the cutoff date: " + currentTime);
            var cutoffDate = Date.parse(currentTime);

            //open snapshot         
            var dates = [];
            var deaths = [];
            var deathInc = [];
            var hospitalized = [];
            var hosInc = [];
            var posInc = [];
            
            stateData.orderByChild("state").equalTo(state).once('value', function (snapshot) {
                
                var data = snapshot.val();
                for (let i in data) {
                    var d1 = Date.parse(data[i].date);
                    if (d1 >= cutoffDate) {
                        var dat = data[i].state;
                        dates.push(data[i].date);
                        deaths.push(data[i].death);
                        hospitalized.push(data[i].hospitalizedCurrently);
                        hosInc.push(data[i].hospitalizedIncrease);
                        posInc.push(data[i].positiveIncrease);
                        deathInc.push(data[i].deathIncrease);
                    }
                }
                document.getElementById('coviddata').removeAttribute("hidden");
                new Chart(document.getElementById("Chart1"), {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [{
                            data: deaths,
                            label: "Deaths",
                            borderColor: "#8e5ea2",
                            fill: false
                        },
                        {
                            data: hospitalized,
                            label: "Hospitalized",
                            borderColor: "#3cba9f",
                            fill: false
                        }]
                    }
                });
                new Chart(document.getElementById("Chart2"), {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [{
                            data: deaths,
                            label: "Deaths",
                            borderColor: "#8e5ea2",
                            fill: false
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: false
                                }
                            }]
                        }
                    }
                });
                new Chart(document.getElementById("Chart3"), {
                    type: 'line',
                    data: {
                        labels: dates,
                        datasets: [{
                            data: posInc,
                            label: "Positive Increase",
                            borderColor: "#8e5ea2",
                            fill: false
                        }]
                    }
                });
            });


            var h_name_n_addy = new Map(); //going to have to add a few together

            var h_name_to_tot_bed = new Map();
            var date_to_inpBeds = new Map();
            var h_name_to_totPeds = new Map();

            hospData.orderByChild("state").equalTo(state).once('value', function (snapshot) {
                var hD = snapshot.val();

                for (let i in hD) {
                    h_name_n_addy.set(hD[i].hospital_name, hD[i].address + ", " + hD[i].city + ", " + hD[i].state + " " + hD[i].zip);

                    var d1 = Date.parse(hD[i].collection_week);
                    if(d1 != cutoffDate){
                        if(parseInt(hD[i].total_beds_7_day_avg) >= 0){
                            if(h_name_to_tot_bed.get(hD[i].hospital_name) == undefined) {
                                h_name_to_tot_bed.set(hD[i].hospital_name, parseInt(hD[i].total_beds_7_day_avg));
                            }
                            else {
                                var num = h_name_to_tot_bed.get(hD[i].hospital_name) + parseInt(hD[i].total_beds_7_day_avg);
                                h_name_to_tot_bed.set(hD[i].hospital_name, num);
                            }
                        }
                        if(parseInt(hD[i].inpatient_beds_7_day_avg) >= 0) {

                            if(date_to_inpBeds.get(hD[i].collection_week) == undefined) {
                                date_to_inpBeds.set(hD[i].collection_week, parseInt(hD[i].inpatient_beds_7_day_avg));
                            }
                            else {
                                var num = date_to_inpBeds.get(hD[i].collection_week) + parseInt(hD[i].inpatient_beds_7_day_avg);
                                date_to_inpBeds.set(hD[i].collection_week, num);
                            }
                        }
                        if(parseInt(hD[i].total_pediatric_patients_hospitalized_confirmed_and_suspected_covid_7_day_avg) >= 0) {
                            if(h_name_to_totPeds.get(hD[i].hospital_name) == undefined) {
                                h_name_to_totPeds.set(hD[i].hospital_name, parseInt(hD[i].total_pediatric_patients_hospitalized_confirmed_and_suspected_covid_7_day_avg));
                            }
                            else {
                                var num = h_name_to_totPeds.get(hD[i].hospital_name) + parseInt(hD[i].total_pediatric_patients_hospitalized_confirmed_and_suspected_covid_7_day_avg);
                                h_name_to_totPeds.set(hD[i].hospital_name, num);
                            }
                        }
                    }
                }
                
                function retKeys(map) 
                {
                    var mp = [];
                    for(const i of map.keys()) 
                    {
                        mp.push(i);
                        console.log(i);
                    }
                    console.log('--');
                    return mp;
                }
                function retIt(map) 
                {
                    var mp = [];
                    for(const i of map.keys()) 
                    {
                        mp.push(map.get(i));
                    }
                    return mp;
                }

                //hospital name vs hospital beds
                var barChartData = 
                {
                    type: 'horizontalBar', 
                    data: {
                        labels: (retKeys(h_name_to_tot_bed)).slice(0,8), 
                        datasets: [{
                            label: "Total Number of Beds",
                            backgroundColor: '#ff6384', 
                            borderColor: '#ff6384', 
                            borderWidth: 1, 
                            data: (retIt(h_name_to_tot_bed)).slice(0,8)
                        }]
                    }, 
                    options: {
                        responsive: true, 
                        legend: {
                            position: 'top'
                        }, 
                        title: {
                            display: true, 
                            text: 'The Total Number of Beds in Each Hospital'
                        },
                        hover: {
                            mode: 'nearest',
                            intersect: false
                        }, 
                        scales: {
                            xAxes: [{
                                display: true, 
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Hospital'
                                }
                            }],
                            yAxes: [{
                                display: true, 
                                scaleLabel: {
                                    display: true, 
                                    labelString: '# of Beds'
                                }
                            }]
                        }

                    }
                    
                };
                var c = document.getElementById('hChart1').getContext('2d');
                var barchar = new Chart(c, barChartData);

                //hospital name vs hospital beds
                var barChartData2 = 
                {
                    type: 'bar', 
                    data: {
                        labels: retKeys(date_to_inpBeds), 
                        datasets: [{
                            label: "Average Number of Inpatient Beds",
                            backgroundColor: '#ff6384', 
                            borderColor: '#ff6384', 
                            borderWidth: 1, 
                            data: retIt(date_to_inpBeds)
                        }]
                    }, 
                    options: {
                        responsive: true, 
                        legend: {
                            position: 'top'
                        }, 
                        title: {
                            display: true, 
                            text: 'The Average Number of Inpatient Beds Each Day'
                        },
                        hover: {
                            mode: 'nearest',
                            intersect: false
                        }, 
                        scales: {
                            xAxes: [{
                                display: true, 
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Day'
                                }
                            }],
                            yAxes: [{
                                display: true, 
                                scaleLabel: {
                                    display: true, 
                                    labelString: '# of Beds'
                                }
                            }]
                        }

                    }
                    
                };
                var d = document.getElementById('hChart2').getContext('2d');
                var barchar = new Chart(d, barChartData2);
            });



            
            
            }
    });
</script>

<style>
    .dropdown-menu {
        max-height: 200px;
        overflow-y: auto;
    }

    .dropdown-space {
        margin-bottom: 6cm;
    }

    .box {
        width: auto;
        padding: 10px;
        border: 5px solid gray;
        margin: 0;
    }
</style>
