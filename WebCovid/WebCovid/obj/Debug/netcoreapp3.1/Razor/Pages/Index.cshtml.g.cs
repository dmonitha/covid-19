#pragma checksum "C:\Users\stuar\source\repos\WebCovid\WebCovid\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cf016fc3635b7e80bb9d97a52a87a4baed8822be"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(WebCovid.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace WebCovid.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\stuar\source\repos\WebCovid\WebCovid\Pages\_ViewImports.cshtml"
using WebCovid;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cf016fc3635b7e80bb9d97a52a87a4baed8822be", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eaceda12a204a37352c6a4fa32797f11151815f6", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\stuar\source\repos\WebCovid\WebCovid\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.js\" integrity=\"sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=\" crossorigin=\"anonymous\"></script>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cf016fc3635b7e80bb9d97a52a87a4baed8822be3193", async() => {
                WriteLiteral("\r\n    <title>Bootstrap 101 Template</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <!-- Bootstrap -->\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Covid Data</h1>
    <p>Pick a state below</p>

    <script src=""https://code.jquery.com/jquery.js""></script>
    <script src=""js/bootstrap.min.js""></script>
    <div class=""dropdown-space dropdown"">
        <button class=""btn btn-secondary dropdown-toggle"" type=""button"" id=""dropdownMenuButton"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
            <span id=""selected"">Choose State</span><span class=""caret""></span>
        </button>
        <div class=""dropdown-menu pre-scrollable"" aria-labelledby=""dropdownMenuButton"">
            <a class=""dropdown-item"" href=""#"">Choose State</a>
            <a class=""dropdown-item"" href=""#"">Alabama</a>
            <a class=""dropdown-item"" href=""#"">Alaska</a>
            <a class=""dropdown-item"" href=""#"">Arizona</a>
            <a class=""dropdown-item"" href=""#"">Arkansas</a>
            <a class=""dropdown-item"" href=""#"">California</a>
            <a class=""dropdown-item"" href=""#"">Colo");
            WriteLiteral(@"rado</a>
            <a class=""dropdown-item"" href=""#"">Connecticut</a>
            <a class=""dropdown-item"" href=""#"">Delaware</a>
            <a class=""dropdown-item"" href=""#"">Florida</a>
            <a class=""dropdown-item"" href=""#"">Georgia</a>
            <a class=""dropdown-item"" href=""#"">Hawaii</a>
            <a class=""dropdown-item"" href=""#"">Idaho</a>
            <a class=""dropdown-item"" href=""#"">Illinois</a>
            <a class=""dropdown-item"" href=""#"">Indiana</a>
            <a class=""dropdown-item"" href=""#"">Iowa</a>
            <a class=""dropdown-item"" href=""#"">Kansas</a>
            <a class=""dropdown-item"" href=""#"">Kentucky</a>
            <a class=""dropdown-item"" href=""#"">Louisiana</a>
            <a class=""dropdown-item"" href=""#"">Maine</a>
            <a class=""dropdown-item"" href=""#"">Maryland</a>
            <a class=""dropdown-item"" href=""#"">Massachusetts</a>
            <a class=""dropdown-item"" href=""#"">Michigan</a>
            <a class=""dropdown-item"" href=""#"">Minnesota</a>
 ");
            WriteLiteral(@"           <a class=""dropdown-item"" href=""#"">Mississippi</a>
            <a class=""dropdown-item"" href=""#"">Missouri</a>
            <a class=""dropdown-item"" href=""#"">Montana</a>
            <a class=""dropdown-item"" href=""#"">Nebraska</a>
            <a class=""dropdown-item"" href=""#"">Nevada</a>
            <a class=""dropdown-item"" href=""#"">New Hampshire</a>
            <a class=""dropdown-item"" href=""#"">New Jersey</a>
            <a class=""dropdown-item"" href=""#"">New Mexico</a>
            <a class=""dropdown-item"" href=""#"">New York</a>
            <a class=""dropdown-item"" href=""#"">North Carolina</a>
            <a class=""dropdown-item"" href=""#"">North Dakota</a>
            <a class=""dropdown-item"" href=""#"">Ohio</a>
            <a class=""dropdown-item"" href=""#"">Oklahoma</a>
            <a class=""dropdown-item"" href=""#"">Oregon</a>
            <a class=""dropdown-item"" href=""#"">Pennsylvania</a>
            <a class=""dropdown-item"" href=""#"">Rhode Island</a>
            <a class=""dropdown-item"" href=""#");
            WriteLiteral(@""">South Carolina</a>
            <a class=""dropdown-item"" href=""#"">South Dakota</a>
            <a class=""dropdown-item"" href=""#"">Tennessee</a>
            <a class=""dropdown-item"" href=""#"">Texas</a>
            <a class=""dropdown-item"" href=""#"">Utah</a>
            <a class=""dropdown-item"" href=""#"">Vermont</a>
            <a class=""dropdown-item"" href=""#"">Virginia</a>
            <a class=""dropdown-item"" href=""#"">Washington</a>
            <a class=""dropdown-item"" href=""#"">West Virginia</a>
            <a class=""dropdown-item"" href=""#"">Wisconsin</a>
            <a class=""dropdown-item"" href=""#"">Wyoming</a>
        </div>
    </div>
    <div class=""hide"" id=""coviddata"" hidden>
        <span id=""stateName"">State Data</span><span class=""caret""></span>
        <table id=""table_body""></table>
    </div>
    <div class=""row"">
        <div class=""col-2 box"">
            Covid facts
        </div>
        <div class=""col-3"">

        </div>
        <div class=""col-2 box"">
            Covid f");
            WriteLiteral(@"acts
        </div>
        <div class=""col-3"">

        </div>
        <div class=""col-2 box"">
            Covid facts
        </div>
    </div>
    <canvas id=""myChart"" width=""400"" height=""400""></canvas>
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                     ");
            WriteLiteral(@"   'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src=""https://www.gstatic.com/firebasejs/8.2.5/firebase.js""></script>
    <!-- TODO: Add SDKs for Firebase products that you want to use
         https://firebase.google.com/docs/web/setup#available-libraries -->
    <!-- <script src=""https://www.gstatic.com/firebasejs/8.2.5/");
            WriteLiteral(@"firebase-analytics.js""></script> -->
    <script>
        // Your web app's Firebase configuration
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
        var firebaseConfig = {
            apiKey: ""AIzaSyALk44aihOM5EqeiQwfD_vhIF7YhXIVwMY"",
            authDomain: ""swamphackscovid19data.firebaseapp.com"",
            databaseURL: ""https://swamphackscovid19data-default-rtdb.firebaseio.com"",
            projectId: ""swamphackscovid19data"",
            storageBucket: ""swamphackscovid19data.appspot.com"",
            messagingSenderId: ""573451783241"",
            appId: ""1:573451783241:web:96c03f6350266800a98398"",
            measurementId: ""G-G0JKHK3W3V""
        };
        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        firebase.analytics();
    </script>
</div>
<script>
    $('.dropdown-menu a').click(function () {
        $('#selected').text($(this).text());
        if ($(this).text() == ""Choose State"" && document.getElementById('cov");
            WriteLiteral(@"iddata').getAttribute(""hidden"") == null) {
            document.getElementById('coviddata').setAttribute(""hidden"", true);

        }
        else if ($(this).text() != ""Choose State"") {
            //Display Code below
            var state = ""FL""; //this should be interchangeable due to drop down
            var city = ""Jacksonville"";
            var zip = ""32223"";
            var database = firebase.database();
            var hospData = database.ref(""hospital_data"");
            var stateData = database.ref(""state_data"");
            //open snapshot
            stateData.orderByChild(""state"").equalTo(state).once('value', function (snapshot) {
                var data = snapshot.val();
                for (let i in data) {
                    var dat = data[i].state;
                    console.log(data[i].date);
                    $(""#table_body"").append(""<tr><td>"" + dat + ""</td></tr>""); //I added it to a table, but dat currently contains the state val and 
                    // data c");
            WriteLiteral(@"urrently contains the whole chunk from date to deaths etc
                }
            });


        }

    });

</script>

<style>
    .dropdown-menu {
        max-height: 200px;
        overflow-y: auto;
    }

    .dropdown-space {
        margin-bottom: 6cm;
    }

    .box {
        width: auto;
        padding: 10px;
        border: 5px solid gray;
        margin: 0;
    }
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
